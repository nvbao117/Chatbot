import { useState } from "react"
import { Button, Card } from "@/components/common"
import styles from "./QuizPage.module.css"

export const QuizPage = () => {
  const [selectedQuiz, setSelectedQuiz] = useState(null)
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedDifficulty, setSelectedDifficulty] = useState("all")
  const [selectedSubject, setSelectedSubject] = useState("all")

  const mockQuizzes = [
    {
      id: 1,
      title: "To√°n h·ªçc c∆° b·∫£n",
      description: "Ki·ªÉm tra ki·∫øn th·ª©c to√°n h·ªçc c∆° b·∫£n",
      questions: 10,
      timeLimit: 30,
      difficulty: "D·ªÖ",
      subject: "To√°n h·ªçc",
      icon: "üßÆ",
      color: "#667eea",
      completed: true,
      score: 85
    },
    {
      id: 2,
      title: "V·∫≠t l√Ω - C∆° h·ªçc",
      description: "B√†i ki·ªÉm tra v·ªÅ c√°c kh√°i ni·ªám c∆° h·ªçc",
      questions: 15,
      timeLimit: 45,
      difficulty: "Trung b√¨nh",
      subject: "V·∫≠t l√Ω",
      icon: "‚ö°",
      color: "#764ba2",
      completed: false,
      score: null
    },
    {
      id: 3,
      title: "H√≥a h·ªçc - H·ªØu c∆°",
      description: "Ki·ªÉm tra ki·∫øn th·ª©c h√≥a h·ªçc h·ªØu c∆°",
      questions: 20,
      timeLimit: 60,
      difficulty: "Kh√≥",
      subject: "H√≥a h·ªçc",
      icon: "üß™",
      color: "#f093fb",
      completed: false,
      score: null
    },
    {
      id: 4,
      title: "L·ªãch s·ª≠ Vi·ªát Nam",
      description: "Ki·ªÉm tra ki·∫øn th·ª©c l·ªãch s·ª≠ Vi·ªát Nam",
      questions: 12,
      timeLimit: 25,
      difficulty: "D·ªÖ",
      subject: "L·ªãch s·ª≠",
      icon: "üåç",
      color: "#4ecdc4",
      completed: true,
      score: 92
    },
    {
      id: 5,
      title: "Ti·∫øng Anh - Ng·ªØ ph√°p",
      description: "B√†i ki·ªÉm tra ng·ªØ ph√°p ti·∫øng Anh",
      questions: 18,
      timeLimit: 40,
      difficulty: "Trung b√¨nh",
      subject: "Ti·∫øng Anh",
      icon: "üìù",
      color: "#45b7d1",
      completed: false,
      score: null
    },
    {
      id: 6,
      title: "Sinh h·ªçc - T·∫ø b√†o",
      description: "Ki·ªÉm tra ki·∫øn th·ª©c v·ªÅ t·∫ø b√†o",
      questions: 14,
      timeLimit: 35,
      difficulty: "Trung b√¨nh",
      subject: "Sinh h·ªçc",
      icon: "üî¨",
      color: "#96ceb4",
      completed: true,
      score: 78
    }
  ]

  const difficulties = [
    { id: "all", name: "T·∫•t c·∫£", color: "#667eea" },
    { id: "D·ªÖ", name: "D·ªÖ", color: "#4ecdc4" },
    { id: "Trung b√¨nh", name: "Trung b√¨nh", color: "#feca57" },
    { id: "Kh√≥", name: "Kh√≥", color: "#ff6b6b" }
  ]

  const subjects = [
    { id: "all", name: "T·∫•t c·∫£", icon: "üìö" },
    { id: "To√°n h·ªçc", name: "To√°n h·ªçc", icon: "üßÆ" },
    { id: "V·∫≠t l√Ω", name: "V·∫≠t l√Ω", icon: "‚ö°" },
    { id: "H√≥a h·ªçc", name: "H√≥a h·ªçc", icon: "üß™" },
    { id: "L·ªãch s·ª≠", name: "L·ªãch s·ª≠", icon: "üåç" },
    { id: "Ti·∫øng Anh", name: "Ti·∫øng Anh", icon: "üìù" },
    { id: "Sinh h·ªçc", name: "Sinh h·ªçc", icon: "üî¨" }
  ]

  const stats = [
    { label: "T·ªïng Quiz", value: mockQuizzes.length, icon: "üìä" },
    { label: "ƒê√£ ho√†n th√†nh", value: mockQuizzes.filter(q => q.completed).length, icon: "‚úÖ" },
    { label: "Ch∆∞a l√†m", value: mockQuizzes.filter(q => !q.completed).length, icon: "‚è≥" },
    { label: "ƒêi·ªÉm TB", value: "85%", icon: "‚≠ê" }
  ]

  const filteredQuizzes = mockQuizzes.filter(quiz => {
    const matchesSearch = quiz.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         quiz.description.toLowerCase().includes(searchTerm.toLowerCase())
    const matchesDifficulty = selectedDifficulty === "all" || quiz.difficulty === selectedDifficulty
    const matchesSubject = selectedSubject === "all" || quiz.subject === selectedSubject
    
    return matchesSearch && matchesDifficulty && matchesSubject
  })

  const getDifficultyColor = (difficulty) => {
    const diff = difficulties.find(d => d.id === difficulty)
    return diff ? diff.color : "#667eea"
  }

  if (selectedQuiz) {
    return (
      <div className={styles.quizDetail}>
        <div className={styles.quizHeader}>
          <button 
            className={styles.backButton}
            onClick={() => setSelectedQuiz(null)}
          >
            ‚Üê Quay l·∫°i
          </button>
          <div className={styles.quizInfo}>
            <div className={styles.quizIcon}>{selectedQuiz.icon}</div>
            <div>
              <h1 className={styles.quizTitle}>{selectedQuiz.title}</h1>
              <p className={styles.quizDescription}>{selectedQuiz.description}</p>
            </div>
          </div>
        </div>

        <div className={styles.quizDetails}>
          <div className={styles.detailGrid}>
            <Card className={styles.detailCard}>
              <div className={styles.detailIcon}>‚ùì</div>
              <div className={styles.detailContent}>
                <h3>{selectedQuiz.questions}</h3>
                <p>C√¢u h·ªèi</p>
              </div>
            </Card>
            
            <Card className={styles.detailCard}>
              <div className={styles.detailIcon}>‚è±Ô∏è</div>
              <div className={styles.detailContent}>
                <h3>{selectedQuiz.timeLimit}</h3>
                <p>Ph√∫t</p>
              </div>
            </Card>
            
            <Card className={styles.detailCard}>
              <div className={styles.detailIcon}>üìä</div>
              <div className={styles.detailContent}>
                <h3 style={{ color: getDifficultyColor(selectedQuiz.difficulty) }}>
                  {selectedQuiz.difficulty}
                </h3>
                <p>ƒê·ªô kh√≥</p>
              </div>
            </Card>
            
            <Card className={styles.detailCard}>
              <div className={styles.detailIcon}>üìö</div>
              <div className={styles.detailContent}>
                <h3>{selectedQuiz.subject}</h3>
                <p>M√¥n h·ªçc</p>
              </div>
            </Card>
          </div>

          {selectedQuiz.completed && (
            <Card className={styles.scoreCard}>
              <div className={styles.scoreHeader}>
                <h3>K·∫øt qu·∫£ g·∫ßn nh·∫•t</h3>
                <div className={styles.scoreValue}>{selectedQuiz.score}%</div>
              </div>
              <div className={styles.scoreBar}>
                <div 
                  className={styles.scoreProgress}
                  style={{ width: `${selectedQuiz.score}%` }}
                />
              </div>
            </Card>
          )}

          <div className={styles.quizActions}>
            <Button 
              className={styles.startButton}
              style={{ '--quiz-color': selectedQuiz.color }}
            >
              {selectedQuiz.completed ? 'L√†m l·∫°i' : 'B·∫Øt ƒë·∫ßu Quiz'}
            </Button>
            <Button variant="outline">
              Xem tr∆∞·ªõc c√¢u h·ªèi
            </Button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className={styles.container}>
      {/* Header Section */}
      <div className={styles.header}>
        <div className={styles.headerContent}>
          <h1 className={styles.title}>‚úèÔ∏è Quiz Center</h1>
          <p className={styles.subtitle}>Test your knowledge and track your progress</p>
        </div>
        
        <div className={styles.searchSection}>
          <div className={styles.searchBox}>
            <span className={styles.searchIcon}>üîç</span>
            <input
              type="text"
              placeholder="Search quizzes..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className={styles.searchInput}
            />
          </div>
        </div>
      </div>

      {/* Stats Cards */}
      <div className={styles.statsGrid}>
        {stats.map((stat, index) => (
          <Card key={index} className={styles.statCard}>
            <div className={styles.statIcon}>{stat.icon}</div>
            <div className={styles.statContent}>
              <h3 className={styles.statValue}>{stat.value}</h3>
              <p className={styles.statLabel}>{stat.label}</p>
            </div>
          </Card>
        ))}
      </div>

      {/* Filters */}
      <div className={styles.filtersSection}>
        <div className={styles.filterGroup}>
          <h3>ƒê·ªô kh√≥:</h3>
          <div className={styles.filterButtons}>
            {difficulties.map((diff) => (
              <button
                key={diff.id}
                className={`${styles.filterButton} ${selectedDifficulty === diff.id ? styles.active : ''}`}
                onClick={() => setSelectedDifficulty(diff.id)}
                style={{ '--filter-color': diff.color }}
              >
                {diff.name}
              </button>
            ))}
          </div>
        </div>

        <div className={styles.filterGroup}>
          <h3>M√¥n h·ªçc:</h3>
          <div className={styles.subjectFilters}>
            {subjects.map((subject) => (
              <button
                key={subject.id}
                className={`${styles.subjectFilter} ${selectedSubject === subject.id ? styles.active : ''}`}
                onClick={() => setSelectedSubject(subject.id)}
              >
                <span className={styles.subjectIcon}>{subject.icon}</span>
                <span>{subject.name}</span>
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* Quiz Grid */}
      <div className={styles.quizzesSection}>
        <div className={styles.sectionHeader}>
          <h2 className={styles.sectionTitle}>
            {filteredQuizzes.length} Quiz ƒë∆∞·ª£c t√¨m th·∫•y
          </h2>
        </div>
        
        <div className={styles.quizGrid}>
          {filteredQuizzes.map((quiz) => (
            <Card 
              key={quiz.id} 
              className={styles.quizCard}
              onClick={() => setSelectedQuiz(quiz)}
              hoverable
            >
              <div className={styles.quizCardHeader}>
                <div className={styles.quizCardIcon} style={{ color: quiz.color }}>
                  {quiz.icon}
                </div>
                <div className={styles.quizCardStatus}>
                  {quiz.completed ? (
                    <span className={styles.completedBadge}>‚úÖ Ho√†n th√†nh</span>
                  ) : (
                    <span className={styles.pendingBadge}>‚è≥ Ch∆∞a l√†m</span>
                  )}
                </div>
              </div>
              
              <div className={styles.quizCardContent}>
                <h3 className={styles.quizCardTitle}>{quiz.title}</h3>
                <p className={styles.quizCardDescription}>{quiz.description}</p>
                
                <div className={styles.quizCardDetails}>
                  <div className={styles.quizDetail}>
                    <span className={styles.detailIcon}>‚ùì</span>
                    <span>{quiz.questions} c√¢u</span>
                  </div>
                  <div className={styles.quizDetail}>
                    <span className={styles.detailIcon}>‚è±Ô∏è</span>
                    <span>{quiz.timeLimit} ph√∫t</span>
                  </div>
                  <div className={styles.quizDetail}>
                    <span className={styles.detailIcon}>üìä</span>
                    <span style={{ color: getDifficultyColor(quiz.difficulty) }}>
                      {quiz.difficulty}
                    </span>
                  </div>
                </div>

                {quiz.completed && (
                  <div className={styles.quizScore}>
                    <span>ƒêi·ªÉm: </span>
                    <span className={styles.scoreValue}>{quiz.score}%</span>
                  </div>
                )}
              </div>
            </Card>
          ))}
        </div>
      </div>
    </div>
  )
}

export default QuizPage